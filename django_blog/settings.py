"""
Django settings for django_blog project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-e0m2cx)52&%#gf%+focqg%_ph$00#j)mcd77auc-^o4ou75&=8"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "article",
    "celery_ssh",
    "rest_framework",
    'user_api',
    'task_api',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "django_blog.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "django_blog.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Celery Configuration Options
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60

CELERY_TIMEZONE="Asia/Shanghai"
CELERY_BROKER_URL = 'redis://192.168.255.181:6379/0'
CELERY_RESULT_BACKEND  = 'redis://192.168.255.181:6379/1'
CELERY_TASK_IGNORE_RESULT = False  # 确保没有禁用任务结果存储


import os

LOGGING = {
    'version': 1,
    #不会禁用已存在的日志记录器
    'disable_existing_loggers': False,
    # 定义消息格式
    'formatters': {
        # 定义详细格式日志条目
        'verbose': {
            # 'format': '{levelname} {asctime} {module} {message}',
            "format": "{name} {levelname} {asctime}  {process:d} {thread:d} {message}",
            'style': '{',
        },
        # 简洁日志条目
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    # 日志输出方向
    'handlers': {
        # 输出到文件
        'file': {
            'level': 'DEBUG',
            # FileHander表示写入到文件
            'class': 'logging.handlers.RotatingFileHandler',
            # 指定文件位置
            'filename': os.path.join(BASE_DIR, 'logs/ansible_tasks.log'),
            # 指定记录方式
            'formatter': 'verbose',
            'maxBytes': 1024  ,
            'backupCount': 5,
        },
    # 控制台输出
    'console': {
        'level': 'DEBUG',
        # 输出到标准输出
        'class': 'logging.StreamHandler',
        # 指定记录格式
        'formatter': 'verbose',
    },
    },
    # 定义应用程序使用的日志记录器
    'loggers': {
        # 自定义的日志记录器名称 ansible_tasks
        'ansible_tasks': {
            'handlers': ['file','console'],
            'level': 'DEBUG',
            # 日志会冒泡传递到父容器
            'propagate': True,
        },
        'task_api.views': {
            "handlers": ["file","console"],
            'level': 'DEBUG',
            'propagate': True,
        }
    },
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://192.168.255.181:6379/1', # Redis服务器的位置
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}